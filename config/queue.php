<?php declare(strict_types=1);

/**
 * Конфигурация системы очередей
 *
 * Поддерживаемые драйверы:
 * - sync      : Синхронное выполнение (для разработки)
 * - database  : Очередь в базе данных
 * - rabbitmq  : RabbitMQ (требует php-amqplib/php-amqplib)
 * - redis     : Redis (требует расширение redis или predis/predis)
 */

return [
    /*
    |--------------------------------------------------------------------------
    | Драйвер очереди по умолчанию
    |--------------------------------------------------------------------------
    |
    | Определяет какой драйвер будет использоваться по умолчанию.
    | Ссылается на ключ в массиве 'connections'.
    |
    */
    'default' => env('QUEUE_CONNECTION', 'sync'),

    /*
    |--------------------------------------------------------------------------
    | Подключения к очередям
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете настроить различные подключения для каждого драйвера.
    |
    */
    'connections' => [
        
        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'table' => 'jobs',
        ],

        'rabbitmq' => [
            'driver' => 'rabbitmq',
            'host' => env('RABBITMQ_HOST', 'localhost'),
            'port' => env('RABBITMQ_PORT', 5672),
            'user' => env('RABBITMQ_USER', 'guest'),
            'password' => env('RABBITMQ_PASSWORD', 'guest'),
            'vhost' => env('RABBITMQ_VHOST', '/'),
        ],

        'redis' => [
            'driver' => 'redis',
            'host' => env('REDIS_HOST', 'localhost'),
            'port' => env('REDIS_PORT', 6379),
            'password' => env('REDIS_PASSWORD', null),
            'database' => env('REDIS_QUEUE_DB', 0),
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Настройки Worker
    |--------------------------------------------------------------------------
    |
    | Настройки для обработчика очередей
    |
    */
    'worker' => [
        'memory' => 128,        // Лимит памяти в MB
        'timeout' => 60,        // Таймаут выполнения задачи в секундах
        'sleep' => 3,           // Пауза между проверками очереди в секундах
        'max_attempts' => 3,    // Максимальное количество попыток
    ],
];
