<?php declare(strict_types=1);

/**
 * –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Dump Server —Å Debug Toolbar
 * 
 * –≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ dump server
 * –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ Debug Toolbar.
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 1. –£–ë–ï–î–ò–¢–ï–°–¨ —á—Ç–æ dump server –ù–ï –∑–∞–ø—É—â–µ–Ω!
 * 2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä: php -S localhost:8000 -t public
 * 3. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:8000/test-dump-debug-toolbar.php
 * 4. –û—Ç–∫—Ä–æ–π—Ç–µ Debug Toolbar (–æ–±—ã—á–Ω–æ –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
 * 5. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Logs"
 * 6. –í—ã —É–≤–∏–¥–∏—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Dump Server
 */

require_once __DIR__ . '/core/bootstrap.php';

\Core\Core::init();

// –£–±–µ–¥–∏–º—Å—è —á—Ç–æ Debug Toolbar –≤–∫–ª—é—á—ë–Ω
if (!defined('SHOW_DEBUG_TOOLBAR')) {
    define('SHOW_DEBUG_TOOLBAR', true);
}

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dump Server + Debug Toolbar Test</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            border-bottom: 3px solid #4CAF50;
            padding-bottom: 10px;
        }
        .info-box {
            background: #e3f2fd;
            border-left: 4px solid #2196F3;
            padding: 15px;
            margin: 20px 0;
        }
        .warning-box {
            background: #fff3cd;
            border-left: 4px solid #ff9800;
            padding: 15px;
            margin: 20px 0;
        }
        .success-box {
            background: #d4edda;
            border-left: 4px solid #4CAF50;
            padding: 15px;
            margin: 20px 0;
        }
        code {
            background: #f4f4f4;
            padding: 2px 6px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
        }
        pre {
            background: #272822;
            color: #f8f8f2;
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
        }
        .step {
            margin: 20px 0;
            padding: 15px;
            background: #fafafa;
            border-radius: 5px;
        }
        .step-number {
            display: inline-block;
            width: 30px;
            height: 30px;
            background: #4CAF50;
            color: white;
            text-align: center;
            line-height: 30px;
            border-radius: 50%;
            font-weight: bold;
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üêõ Dump Server + Debug Toolbar Integration Test</h1>
        
        <div class="info-box">
            <strong>‚ÑπÔ∏è –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</strong><br>
            –ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ <code>server_dump()</code> –∫–æ–≥–¥–∞ Dump Server –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.
            –≠—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ <code>Logger::warning()</code> –∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤ Debug Toolbar.
        </div>

        <?php
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å dump server
        $serverAvailable = dump_server_available();
        
        if ($serverAvailable): ?>
            <div class="warning-box">
                <strong>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:</strong> Dump Server –∑–∞–ø—É—â–µ–Ω!<br>
                –î–ª—è —Ç–µ—Å—Ç–∞ fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ (Ctrl+C –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ).
            </div>
        <?php else: ?>
            <div class="success-box">
                <strong>‚úÖ –û—Ç–ª–∏—á–Ω–æ!</strong> Dump Server –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - fallback –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!<br>
                –í—Å–µ dumps –±—É–¥—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ñ–∞–π–ª –∏ –ø–æ—è–≤—è—Ç—Å—è –≤ Debug Toolbar.
            </div>
        <?php endif; ?>

        <h2>üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö</h2>
        
        <?php
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
        $testData = [
            'page' => 'test-dump-debug-toolbar.php',
            'timestamp' => date('Y-m-d H:i:s'),
            'server_available' => $serverAvailable,
            'random' => rand(1000, 9999),
        ];
        
        server_dump($testData, 'Test Page Data');
        
        $user = [
            'id' => 999,
            'name' => 'Test User',
            'email' => 'test@example.com',
            'roles' => ['viewer'],
        ];
        
        server_dump($user, 'User Data');
        
        $config = [
            'app' => 'Vilnius Framework',
            'debug' => true,
            'version' => '1.0.0',
        ];
        
        server_dump($config, 'Config Data');
        ?>
        
        <div class="step">
            <strong>‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 3 dumps:</strong>
            <ul>
                <li>Test Page Data (array)</li>
                <li>User Data (array)</li>
                <li>Config Data (array)</li>
            </ul>
        </div>

        <h2>üîç –ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ Debug Toolbar</h2>
        
        <div class="step">
            <span class="step-number">1</span>
            <strong>–û—Ç–∫—Ä–æ–π—Ç–µ Debug Toolbar</strong><br>
            –û–±—ã—á–Ω–æ –æ–Ω –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—á—ë—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∞ —Å –∏–∫–æ–Ω–∫–∞–º–∏).
        </div>
        
        <div class="step">
            <span class="step-number">2</span>
            <strong>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Logs"</strong><br>
            –¢–∞–º –≤—ã —É–≤–∏–¥–∏—Ç–µ –≤—Å–µ –ª–æ–≥–∏ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
        </div>
        
        <div class="step">
            <span class="step-number">3</span>
            <strong>–ù–∞–π–¥–∏—Ç–µ –∑–∞–ø–∏—Å–∏ —Å —É—Ä–æ–≤–Ω–µ–º WARNING</strong><br>
            –û–Ω–∏ –±—É–¥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç: <code>Dump Server unavailable, data logged to file</code>
        </div>
        
        <div class="step">
            <span class="step-number">4</span>
            <strong>–ò–∑—É—á–∏—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç</strong><br>
            –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç:
            <ul>
                <li><code>label</code> - –º–µ—Ç–∫–∞ dump'–∞</li>
                <li><code>type</code> - —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö</li>
                <li><code>file</code> - —Ñ–∞–π–ª –æ—Ç–∫—É–¥–∞ –≤—ã–∑–≤–∞–Ω–æ</li>
                <li><code>line</code> - —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞</li>
                <li><code>log_file</code> - –ø—É—Ç—å –∫ –ª–æ–≥-—Ñ–∞–π–ª—É</li>
            </ul>
        </div>

        <h2>üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥-—Ñ–∞–π–ª–∞</h2>
        
        <div class="info-box">
            <strong>–í—Å–µ dumps —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:</strong><br>
            <code><?php echo STORAGE_DIR . '/logs/dumps.log'; ?></code>
        </div>
        
        <p>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á–µ—Ä–µ–∑ CLI:</p>
        <pre>php vilnius dump:log --tail=10</pre>

        <h2>üéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?</h2>
        
        <div class="step">
            <strong>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å Dump Server:</strong>
            <pre>php vilnius dump-server</pre>
            
            –ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É. Dumps –ø–æ–π–¥—É—Ç –≤ —Å–µ—Ä–≤–µ—Ä –≤–º–µ—Å—Ç–æ –ª–æ–≥–∞,
            –∏ –≤ Debug Toolbar –ù–ï –±—É–¥–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!
        </div>

        <div class="step">
            <strong>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –≤–∞—à –∫–æ–¥:</strong>
            <pre>// –í –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö
server_dump($user, 'User Data');

// –í –º–æ–¥–µ–ª—è—Ö
server_dump($this->attributes, 'Model State');

// –í middleware
server_dump($request->all(), 'Request Data');</pre>
        </div>
    </div>

    <?php
    // –†–µ–Ω–¥–µ—Ä–∏–º Debug Toolbar
    if (defined('SHOW_DEBUG_TOOLBAR') && SHOW_DEBUG_TOOLBAR) {
        echo render_debug_toolbar();
    }
    ?>
</body>
</html>

